# A Docker Compose must always start with the version tag.
# We use '3' because it's the last version.
version: '3.7'

# You should know that Docker Compose works with services.
# 1 service = 1 container.
# For example, a service, a server, a client, a database...
# We use the keyword 'services' to start to create services.
services:
  # The name of our service is "database"
  # but you can use the name of your choice.
  # Note: This may change the commands you are going to use a little bit.
  database:
    # Official Postgres image from DockerHub (we use the last version)
    image: 'postgres:latest'
    container_name: local_pgdb
    restart : always

    # By default, a Postgres database is running on the 5432 port.
    # If we want to access the database from our computer (outside the container),
    # we must share the port with our computer's port.
    # The syntax is [port we want on our machine]:[port we want to retrieve in the container]
    # Note: You are free to change your computer's port,
    # but take into consideration that it will change the way
    # you are connecting to your database.
    ports:
      - 5432:5432

    # The `env_file` tag allows us to declare an environment file
    env_file:
      - .env # The name of your environment file (the one at the repository root)

    # The `volumes` tag allows us to share a folder with our container.
    # Its syntax is as follows: [folder path on our machine]:[folder path to retrieve in the container]
    volumes:
      # In this example, we share the folder `db-data` in our root repository, with the default PostgreSQL data path.
      # It means that every time the repository is modifying the data inside
      # of `/var/lib/postgresql/data/`, automatically the change will appear in `db-data`.
      # You don't need to create the `db-data` folder. Docker Compose will do it for you.
      - ./postgres/:/var/lib/postgresql/data/
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    # The `env_file` tag allows us to declare an environment file
    env_file:
      - .env # The name of your environment file (the one at the repository root)
    volumes:
      - Local_Clothing_App_Pgadmin_Data:/var/lib/pgadmin
    links:
      - "database:pgsql-server"
volumes:
  Local_Clothing_App_DB_Data:
  Local_Clothing_App_Pgadmin_Data: